# 🔥 HARSH RECON - Elite Reconnaissance Framework 🔥

[![Version](https://img.shields.io/badge/version-1.0-brightgreen.svg)](https://github.com/harsh/harsh-recon)
[![Python](https://img.shields.io/badge/python-3.7+-blue.svg)](https://www.python.org/downloads/)
[![License](https://img.shields.io/badge/license-MIT-green.svg)](LICENSE)

## 🎯 Overview

**HARSH RECON** is a comprehensive, automated reconnaissance framework designed for bug bounty hunters and security researchers. It combines multiple industry-standard tools into a single, powerful CLI application with a beautiful stealth green hacker aesthetic.

## ✨ Features

- **🔍 Comprehensive Subdomain Enumeration**
  - Subfinder, Amass, Assetfinder, Findomain
  - Automatic deduplication and sorting
  - DNS resolution and validation

- **🎯 Live Host Detection**
  - HTTPx for live subdomain verification
  - Technology detection
  - Response analysis

- **🚨 Security Scanning**
  - Subdomain takeover detection (Subzy)
  - Vulnerability scanning (Nuclei)
  - Directory bruteforcing (Gobuster, FFuf)

- **📊 Beautiful Reporting**
  - ASCII flowcharts
  - Detailed vulnerability reports
  - Organized output structure

- **🎨 Stealth Green Theme**
  - Matrix-style green color scheme
  - Interactive CLI interface
  - Real-time status updates

- **🔧 Auto-Installation**
  - Automatic tool detection
  - One-click installation of missing tools
  - SecLists auto-update

## 🚀 Quick Start

### Installation

```bash
# Clone the repository
git clone https://github.com/harsh/harsh-recon.git
cd harsh-recon

# Run the installer
chmod +x install.sh
./install.sh

# Or manual installation
pip3 install -r requirements.txt
python3 harsh_recon.py -d example.com
```

### Basic Usage

```bash
# Simple scan
harsh-recon -d example.com

# Custom output directory
harsh-recon -d example.com -o custom_results

# Python direct execution
python3 harsh_recon.py -d target.com
```

## 📋 Prerequisites

- **Operating System**: Linux (Kali, Ubuntu, Debian) or macOS
- **Python**: 3.7 or higher
- **Go**: 1.17 or higher
- **Git**: For cloning repositories
- **Internet**: For tool downloads and updates

## 🛠️ Tools Integrated

| Category | Tools |
|----------|-------|
| **Subdomain Enumeration** | Subfinder, Amass, Assetfinder, Findomain, Puredns |
| **DNS Operations** | DNSx, MassDNS, DNSgen, AltDNS |
| **HTTP Probing** | HTTPx, Hakrawler |
| **Vulnerability Scanning** | Nuclei, Subzy |
| **Directory Discovery** | Gobuster, FFuf, Dirsearch |
| **Wordlists** | SecLists (Auto-Updated) |

## 📁 Output Structure

```
harsh_recon_results/
└── example.com/
    └── 20240115_143022/
        ├── subdomains.txt          # All discovered subdomains
        ├── live_subdomains.txt     # Active subdomains
        ├── potential_takeovers.txt # Subdomain takeover findings
        ├── vulnerabilities.txt     # Discovered vulnerabilities
        ├── recon_flowchart.txt    # ASCII flowchart
        └── final_report.txt       # Comprehensive report
```

## 🎯 Workflow

1. **Subdomain Discovery**
   - Multiple tools run in parallel
   - Results merged and deduplicated
   
2. **DNS Resolution**
   - Verify subdomain existence
   - Extract DNS records
   
3. **Live Detection**
   - HTTP/HTTPS probing
   - Technology fingerprinting
   
4. **Security Assessment**
   - Subdomain takeover checks
   - Vulnerability scanning
   - Directory enumeration
   
5. **Report Generation**
   - Beautiful ASCII flowchart
   - Detailed findings report

## 🎨 Screenshot

```
    ╔═══════════════════════════════════════════════════════════════════════╗
    ║                                                                       ║
    ║  🔥  ███████ ██      ██ ████████ ███████    ██████  ███████ 🔥  ║
    ║      ██      ██      ██    ██    ██      ██   ██ ██               ║
    ║      █████   ██      ██    ██    █████   ██████  █████            ║
    ║      ██      ██      ██    ██    ██      ██   ██ ██               ║
    ║      ███████ ███████ ██    ██    ███████ ██   ██ ███████          ║
    ║                                                                       ║
    ╚═══════════════════════════════════════════════════════════════════════╝
    
    COMPREHENSIVE BUG BOUNTY RECONNAISSANCE & VULNERABILITY ASSESSMENT
    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
    Author: Harsh | Version: 1.0 | Mode: STEALTH
    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
```

## ⚙️ Configuration

The tool works out of the box with sensible defaults. For advanced users:

- **Wordlists**: Located in `~/wordlists/SecLists/`
- **Output**: Default `harsh_recon_results/`
- **Timeout**: 5 minutes per tool (configurable)

## 🔧 Troubleshooting

### Common Issues

1. **Permission Denied**
   ```bash
   chmod +x harsh_recon.py
   chmod +x install.sh
   ```

2. **Go Tools Not Found**
   ```bash
   export PATH=$PATH:$HOME/go/bin
   source ~/.bashrc
   ```

3. **Python Module Errors**
   ```bash
   pip3 install -r requirements.txt
   ```

## 🤝 Contributing

Contributions are welcome! Please feel free to submit a Pull Request.

## 📜 License

This project is licensed under the MIT License - see the LICENSE file for details.

## ⚠️ Disclaimer

This tool is for educational and authorized testing purposes only. Users are responsible for complying with applicable laws and regulations. The author is not responsible for misuse or damage caused by this tool.

## 🙏 Acknowledgments

- ProjectDiscovery for amazing tools
- OWASP Amass team
- SecLists by Daniel Miessler
- All the tool developers

## 📞 Contact

- **Author**: Harsh
- **Tool**: Harsh Recon
- **Version**: 1.0

---

**Happy Hunting! 🎯**


POC: 
